This is also a linear regression project but instead of using LinearRegression or Randomforestregressor module from sklearn , XGBoostRegressor is used .
Initially , the target was to predict values of the output_sales but the csv file did not have the mentioned column so , adjustments were made and the MRP of the item was predicted .
XGBoost is a machine learning algorithm that belongs to the ensemble learning category . 
It utilizes decision trees as base learners and employs regularization techniques to enhance model generalization .
XgboostClassifier can be used for classifiacation purposes as well .

Apart from the ususal packages , from sklearn LabelEncoder was also imported which helps to perform encoding withoutn replacing values .
It is very ideal to use the LabelEncoder when multiple different vlaues are present categorically . It does not make sense to keep replacing every continuous value with a value that can be taken by the machine learning model .

By using df.isnull().sum() , the number of null values in every colummn is printed . 
This showed thatv no column had any missing values except Item_Weight and Outlet_Size .

We handle missing values by replacing them with the mean of the column , but in case of 'strings' type values , one cannot calculate the mean so different measures are taken .
(CHECK THE COLAB FILE COMMENTS FOR FURTHER INFORMATION )

Seaborn and Matplotlib libraries are used for plotting graphs . 
'sns.distplot' was used to plot the distribution of each column indiviusally .

The datsaet is divided into X and Y parts ( arrays ) .
X = the whole dataset consisting of the features except the MRP , since the aim is to predict that .
Y = the MRP column of the csv file . 

The train_test_split module was used from sklearn library for splitting the X and Y into the two datasets .

Using XGBregressor ( which uses decision trees ) , values of MRP corrresponding to the X_train were predicted .

For comparision purposes , the training_data_prediction values were plotted with the actual values that were stored in the Y_train array .
( x=y )

At the start , from sklearn library , metrics was also imported which helped to calculate the error value ( using r2score ) .

The same process was executed with the test datatset and the model was tested succesfully .

Google colab link - https://colab.research.google.com/drive/1l5yr_hVAl7vZYPHmZ_cN-jAIyTmdV0Jh#scrollTo=PK00_Tmh-qam
